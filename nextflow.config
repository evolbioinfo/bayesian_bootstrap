fastqueue = 'common,dedicated'
fastqos= '--qos=fast'
//fastqueue = 'cnrvir'
//fastqos= '-A cnrvir'
longqueue = 'cnrvir'
longqos= '-A cnrvir'

// Preform work directory cleanup after a successful run
//cleanup = true

executor {
    name = 'slurm'
    queueSize = 10000
}

report {
       enabled = true
       file = 'reports/report.html'
       overwrite=true
}

trace {
    enabled = true
    file = 'reports/trace.txt'
    overwrite=true
}

timeline {
    enabled = true
    file = 'reports/timeline.html'
    overwrite=true
}

dag {
    enabled = true
    file = 'reports/dag.dot'
    overwrite=true
}

singularity {
        enabled = true
        autoMounts = true
        //runOptions = '--home $HOME:/home/$USER --bind /pasteur'
        cacheDir = 'singularity'
}

process {
    executor='slurm'
    //executor='local'
    //queue = "$fastqueue"
    //clusterOptions = "$fastqos"
    queue = {task.attempt>1 ? "$longqueue" : "$fastqueue" }
    clusterOptions = {task.attempt > 1  ? "$longqos" : "$fastqos" }
    //queue = "$longqueue"
    //clusterOptions = "$longqos"
    scratch=false
    maxRetries=30
    errorStrategy='retry'

    withLabel: phyml {
        container='evolbioinfo/phyml:v3.3.20200621'
        cpus=1
        memory={3.GB * task.attempt}
    }

    withLabel: gotree {
        container='evolbioinfo/gotree:v0.4.2'
        cpus=1
        memory='15G'
    }

    withLabel: goalign {
        container='evolbioinfo/goalign:dev0537492'
        cpus=1
        memory='20G'
    }

    withLabel: r {
        container='evolbioinfo/r-extended:v4.2.3'
        cpus=1
        memory='20G'
    }
}


params {
    msa = "data/alignment.fasta"
    results="results"
    collapse=0.1
    collapseref=false
    nboot = 200
}
